name: Python
on:
  push:
    # branches: [ "main" ]
    branches: [ "dev" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ published ]
jobs:
  linux-wheels:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux1_x86_64
    steps:
     - uses: actions/checkout@v3
     - name: wheels
       run: |
         curl https://sh.rustup.rs -sSf | sh -s -- -y
         source $HOME/.cargo/env
         export PATH="$HOME/root/.cargo/bin:$PATH"
         set -e -x
	for PYBIN in /opt/python/cp3[5678]*/bin; do
	    "${PYBIN}/pip" install maturin
	    "${PYBIN}/maturin" build -i "${PYBIN}/python" --release
	done
	for wheel in target/wheels/*.whl; do
	    auditwheel repair "${wheel}"
	done
     - uses: actions/upload-artifact@v1
       with:
         name: linux-wheels
         path: wheelhouse/
  test:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: pypi
        run: |
          pip install maturin
          maturin build --features python
          pip install target/wheels/*.whl
      - name: conda
        run: |
          cd conda/
          conda update conda
          conda install anaconda-client conda-build
          export VERSION=$(grep "version =" ../Cargo.toml | cut -d '"' -f2 | head -n 1)
          sed -i "s/VERSION_PLACEHOLDER/$VERSION/" meta.yaml
          conda build .
          conda install /usr/share/miniconda/conda-bld/noarch/polymers*.tar.bz2
  conda:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./conda/
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: publish
        run: |
          conda update conda
          conda install anaconda-client conda-build
          export VERSION=$(grep "version =" ../Cargo.toml | cut -d '"' -f2 | head -n 1)
          sed -i "s/VERSION_PLACEHOLDER/$VERSION/" meta.yaml
          conda build .
          PATH="/usr/share/miniconda/bin/:$PATH"
          export ANACONDA_API_TOKEN=${{ secrets.ANACONDA_TOKEN }}
          anaconda upload --user mrbuche /usr/share/miniconda/conda-bld/noarch/polymers*.tar.bz2
  pypi:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: publish
        run: |
          pip install maturin
          maturin publish -F python -u __token__ -p ${{ secrets.PYPI_TOKEN }}
